const data = [
  { date: '1月20日', 累计确诊: 291,   现有重症: null, 累计死亡: 6,   累计治愈:25, },
  { date: '1月21日', 累计确诊: 440,   现有重症: 102,  累计死亡: 9,   累计治愈:28, },
  { date: '1月22日', 累计确诊: 571,   现有重症: 95,   累计死亡: 17,  累计治愈:28,   现有疑似:393,   隔离治疗: 526 },
  { date: '1月23日', 累计确诊: 830,   现有重症: 177,  累计死亡: 25,  累计治愈:34,   现有疑似:1072,  隔离治疗: 771 },
  { date: '1月24日', 累计确诊: 1287,  现有重症: 237,  累计死亡: 41,  累计治愈:38,   现有疑似:1965,  隔离治疗: 1208 },
  { date: '1月25日', 累计确诊: 1975,  现有重症: 324,  累计死亡: 56,  累计治愈:49,   现有疑似:2684,  隔离治疗: 1870 },
  { date: '1月26日', 累计确诊: 2744,  现有重症: 461,  累计死亡: 80,  累计治愈:51,   现有疑似:5794,  隔离治疗: 2613 },
  { date: '1月27日', 累计确诊: 4515,  现有重症: 976,  累计死亡: 106, 累计治愈:60,   现有疑似:6973,  隔离治疗: 4349 },
  { date: '1月28日', 累计确诊: 5974,  现有重症: 1239, 累计死亡: 132, 累计治愈:103,  现有疑似:9239,  隔离治疗: 5739 },
  { date: '1月29日', 累计确诊: 7711,  现有重症: 1370, 累计死亡: 170, 累计治愈:124,  现有疑似:12167, 隔离治疗: 7417 },
  { date: '1月30日', 累计确诊: 9692,  现有重症: 1527, 累计死亡: 213, 累计治愈:171,  现有疑似:15238, 隔离治疗: 9308 },
  { date: '1月31日', 累计确诊: 11791, 现有重症: 1795, 累计死亡: 259, 累计治愈:243,  现有疑似:17988, 隔离治疗: 11289 },
  { date: '2月1日',  累计确诊: 14380, 现有重症: 2110, 累计死亡: 304, 累计治愈:328,  现有疑似:19544, 隔离治疗: 13748 },
  { date: '2月2日',  累计确诊: 17205, 现有重症: 2296, 累计死亡: 361, 累计治愈:475,  现有疑似:21558, 隔离治疗: 16369 },
  { date: '2月3日',  累计确诊: 20438, 现有重症: 2788, 累计死亡: 425, 累计治愈:632,  现有疑似:23214, 隔离治疗: 19381 },
  { date: '2月4日',  累计确诊: 24324, 现有重症: 3219, 累计死亡: 490, 累计治愈:892,  现有疑似:23260, 隔离治疗: 22942 },
  { date: '2月5日',  累计确诊: 28018, 现有重症: 3859, 累计死亡: 563, 累计治愈:1153, 现有疑似:24702, 隔离治疗: 26302 }
];
const ds = new DataSet();
const dv = ds.createView().source(data);
// fold 方式完成了行列转换，如果不想使用 DataSet 直接手工转换数据即可
dv.transform({
  type: 'fold',
  fields: [ '累计确诊', '隔离治疗', '现有重症', '累计死亡', '累计治愈', '现有疑似' ], // 展开字段集
  key: 'type', // key字段
  value: 'value' // value字段
});
const chart = new G2.Chart({
  container: 'container',
  forceFit: true,
  height: 500
});
chart.source(dv, {
  date: {
	range: [ 0, .8 ]
  }
});
chart.tooltip({
  crosshairs: {
	type: 'line'
  }
});
chart.axis('value', {
  label: {
	formatter: val => {
	  return val + '例';
	}
  }
});
chart
  .line()
  .position('date*value')
  .color('type', ['#f88', '#f00', '#b00', '#333', '#0b0', '#fd0'])
  .shape('smooth');
chart
  .point()
  .position('date*value')
  .color('type', ['#f88', '#f00', '#b00', '#333', '#0b0', '#fd0'])
  .size(4)
  .shape('circle')
  .style({
	stroke: '#fff',
	lineWidth: 1
  });
chart.render();
